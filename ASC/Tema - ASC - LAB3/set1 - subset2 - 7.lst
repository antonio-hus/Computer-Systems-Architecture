     1                                  ; Laboratory 3 Exercises | Additions, subtractions | Subset Two | Exercise 7
     2                                  
     3                                  bits 32 
     4                                  global start        
     5                                  
     6                                  extern exit              
     7                                  import exit msvcrt.dll    
     8                                  
     9                                  ;a - byte, b - word, c - double word, d - qword - Signed representation
    10                                  segment data use32 class=data
    11 00000000 FE                          a db -2
    12 00000001 FFFF                        b dw -1
    13 00000003 FDFFFFFF                    c dd -3
    14 00000007 F4FFFFFFFFFFFFFF            d dq -12
    15                                  
    16                                  segment code use32 class=code
    17                                      start:
    18                                          
    19                                          ; (c+c+c)-b+(d-a)
    20                                          
    21                                          ; ECX = c+c+c = -3-3-3 = -9
    22 00000000 8B0D[03000000]                  mov ECX, [c]
    23 00000006 030D[03000000]                  add ECX, [c]
    24 0000000C 030D[03000000]                  add ECX, [c]
    25                                          
    26                                          ; c = (c+c+c)-b = -9 - (-1) = -8
    27 00000012 66A1[01000000]                  mov AX, [b]
    28 00000018 98                              cwde 
    29 00000019 29C1                            sub ECX, EAX
    30 0000001B 890D[03000000]                  mov dword[c], ECX
    31                                          
    32                                          ; ECX:EBX = d-a = -12 - (-2) = -10
    33 00000021 8B1D[07000000]                  mov EBX,[d+0]
    34 00000027 8B0D[0B000000]                  mov ECX,[d+4]
    35                                          
    36 0000002D A0[00000000]                    mov AL, [a]
    37 00000032 6698                            cbw
    38 00000034 98                              cwde
    39 00000035 99                              cdq
    40                                          
    41 00000036 F8                              clc
    42 00000037 29C3                            sub EBX, EAX
    43 00000039 19D1                            sbb ECX, EDX
    44                                          
    45                                          ; EDX:EAX = c + ECX:EBX = (c+c+c)-b+(d-a) = -8 + -10 = -18
    46 0000003B A1[03000000]                    mov EAX, [c]
    47 00000040 99                              cdq
    48                                          
    49 00000041 F8                              clc
    50 00000042 01D8                            add EAX, EBX
    51 00000044 11CA                            adc EDX, ECX
    52                                          
    53                                          ; results in EDX:EAX
    54                                          
    55 00000046 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    56 00000048 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
