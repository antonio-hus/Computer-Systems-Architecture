     1                                  ; Laboratory 3 Exercises | Multiplications, Divisions | Exercise 7
     2                                  
     3                                  bits 32 
     4                                  global start        
     5                                  
     6                                  extern exit              
     7                                  import exit msvcrt.dll    
     8                                  
     9                                  ;a,b-byte; c-word; e-doubleword; x-qword -- Signed
    10                                  segment data use32 class=data
    11 00000000 05                          a db 5
    12 00000001 04                          b db 4
    13 00000002 0300                        c dw 3
    14 00000004 02000000                    e dd 2
    15 00000008 0100000000000000            x dq 1
    16                                      
    17 00000010 <res 00000001>              tempb resb 1
    18 00000011 <res 00000004>              tempd resd 1
    19                                  
    20                                  segment code use32 class=code
    21                                      start:
    22                                          
    23                                          ; (a-2)/(b+c)+a*c+e-x
    24                                          
    25                                          ; tempb = a-2 = 5-2 = 3
    26 00000000 A0[00000000]                    mov AL, [a]
    27 00000005 2C02                            sub AL, 2
    28 00000007 A2[10000000]                    mov byte[tempb], AL
    29                                          
    30                                          ; CX = b+c = 4+3 = 7
    31 0000000C A0[01000000]                    mov AL, [b]
    32 00000011 6698                            cbw
    33 00000013 660305[02000000]                add AX, [c]
    34 0000001A 6689C1                          mov CX, AX
    35                                          
    36                                          ; tempd = cwde(cbw(tempb))/CX = (a-2)/(b+c) = 3/7 = 0 rest 7
    37 0000001D A0[10000000]                    mov AL,[tempb]  
    38 00000022 6698                            cbw
    39 00000024 98                              cwde
    40 00000025 66BA0000                        mov DX, 0
    41 00000029 66F7F9                          idiv CX
    42 0000002C 98                              cwde
    43 0000002D A3[11000000]                    mov dword[tempd], EAX
    44                                          
    45                                          ; EAX = a*c = 5*3 = 15
    46 00000032 A0[00000000]                    mov AL, [a]
    47 00000037 6698                            cbw
    48 00000039 668B0D[02000000]                mov CX, [c]
    49 00000040 66F7E9                          imul CX
    50                                          
    51                                          ; tempd = (a-2)/(b+c)+a*c+e = 0+15+2 = 17
    52 00000043 8B1D[11000000]                  mov EBX, dword[tempd]
    53 00000049 01C3                            add EBX, EAX
    54 0000004B 031D[04000000]                  add EBX, [e]
    55 00000051 891D[11000000]                  mov dword[tempd], EBX
    56                                          
    57                                          ; EDX:EAX = cdq(tempd) - x = 17-1 = 16
    58 00000057 A1[11000000]                    mov EAX, [tempd]
    59 0000005C 99                              cdq
    60                                          
    61 0000005D 8B1D[08000000]                  mov EBX, [x+0]
    62 00000063 8B0D[0C000000]                  mov ECX, [x+4]
    63                                          
    64 00000069 F8                              clc
    65 0000006A 29D8                            sub EAX, EBX
    66 0000006C 19CA                            sbb EDX, ECX
    67                                          
    68                                          ; results in EDX:EAX
    69                                          
    70 0000006E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    71 00000070 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
