     1                                  ; category: additions / subtractions | problem set: a,b,c,d byte | problem: 7
     2                                  
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit
     8                                  import exit msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 0500                        a dw 5
    12 00000002 0200                        b dw 2
    13 00000004 0400                        c dw 4
    14 00000006 0600                        d dw 6
    15                                  
    16                                  segment code use32 class=code
    17                                      start:
    18                                          
    19                                          ;(c+c+c)-b+(d-a)
    20                                          ; we cant have to variable operands so we use the registry AX as an auxiliary for most of our operations
    21                                          
    22                                          ; c = c+c+c = 4+4+4 = 12 (0C)
    23 00000000 66A1[04000000]                  mov AX, [c]
    24 00000006 660305[04000000]                add AX, [c]
    25 0000000D 660305[04000000]                add AX, [c]
    26 00000014 66A3[04000000]                  mov word [c], AX
    27                                          
    28                                          ; c = c - b = (c+c+c) - b =  12 (0C) - 2 = 10 (0A)
    29 0000001A 66A1[04000000]                  mov AX, [c]
    30 00000020 662B05[02000000]                sub AX, [b]
    31 00000027 66A3[04000000]                  mov word [c], AX
    32                                          
    33                                          ; d = d-a = 6-5 = 1
    34 0000002D 66A1[06000000]                  mov AX, [d]
    35 00000033 662B05[00000000]                sub AX, [a]
    36 0000003A 66A3[06000000]                  mov word [d], AX
    37                                          
    38                                          ; a = c+d = (c+c+c)-b+(d-a) = 10(0A) + 1 = 11 (0B)
    39 00000040 66A1[04000000]                  mov AX, [c]
    40 00000046 660305[06000000]                add AX, [d]
    41 0000004D 66A3[00000000]                  mov word [a], AX
    42                                   
    43                                          ;result is in a ( and also AX )
    44                                          
    45 00000053 6A00                            push    dword 0
    46 00000055 FF15[00000000]                  call    [exit]
