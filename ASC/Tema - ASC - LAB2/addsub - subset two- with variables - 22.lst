     1                                  ; category: additions / subtractions | problem set: a,b,c,d word | problem: 22
     2                                  
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  
     7                                  extern exit
     8                                  import exit msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 0200                        a dw 2
    12 00000002 0900                        b dw 9
    13 00000004 0200                        c dw 2
    14 00000006 0300                        d dw 3
    15                                  
    16                                  segment code use32 class=code
    17                                      start:
    18                                          
    19                                          ;(b-a)-(c+c+d)
    20                                          ; we cant have to variable operands so we use the registry AX as an auxiliary for most of our operations
    21                                          
    22                                          ; b = b-a = 9-2 = 7
    23 00000000 66A1[02000000]                  mov AX, [b]
    24 00000006 662B05[00000000]                sub AX, [a]
    25 0000000D 66A3[02000000]                  mov word [b], AX
    26                                          
    27                                          ; c = c+c+d = 2+2+3 = 7
    28 00000013 66A1[04000000]                  mov AX, [c]
    29 00000019 660305[04000000]                add AX, [c]
    30 00000020 660305[06000000]                add AX, [d]
    31 00000027 66A3[04000000]                  mov word [c], AX
    32                                          
    33                                          ; a = b-c = (b-a)-(c+c+d) = 8-7 = 0
    34 0000002D 66A1[02000000]                  mov AX, [b]
    35 00000033 662B05[04000000]                sub AX, [c]
    36 0000003A 66A3[00000000]                  mov word [a], AX
    37                                          
    38                                          
    39                                          ;result is in a ( and also AX )
    40                                          
    41 00000040 6A00                            push    dword 0
    42 00000042 FF15[00000000]                  call    [exit]
